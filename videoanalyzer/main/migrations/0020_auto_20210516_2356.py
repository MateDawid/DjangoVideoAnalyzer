# Generated by Django 3.2.3 on 2021-05-16 21:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0019_auto_20210512_2210'),
    ]

    operations = [
        migrations.AlterField(
            model_name='circledetectionmodel',
            name='dp',
            field=models.FloatField(default=1, help_text='Inverse resolution ratio.', verbose_name='DP'),
        ),
        migrations.AlterField(
            model_name='circledetectionmodel',
            name='max_radius',
            field=models.IntegerField(default=100, help_text='Maximum radius to be detected.', verbose_name='MAX_RADIUS'),
        ),
        migrations.AlterField(
            model_name='circledetectionmodel',
            name='min_dist',
            field=models.FloatField(default=20, help_text='Minimum distance between detected centers.', verbose_name='MIN_DIST'),
        ),
        migrations.AlterField(
            model_name='circledetectionmodel',
            name='min_radius',
            field=models.IntegerField(default=20, help_text='Minimum radius to be detected.', verbose_name='MIN_RADIUS'),
        ),
        migrations.AlterField(
            model_name='circledetectionmodel',
            name='param1',
            field=models.FloatField(default=50, help_text='Upper threshold for the internal Canny edge detector.', verbose_name='PARAM1'),
        ),
        migrations.AlterField(
            model_name='circledetectionmodel',
            name='param2',
            field=models.FloatField(default=70, help_text='Threshold for center detection.', verbose_name='PARAM2'),
        ),
        migrations.AlterField(
            model_name='colorhsvdetectionmodel',
            name='max_hue',
            field=models.PositiveIntegerField(default=160, help_text='Maximum hue (0 - 360).', validators=[django.core.validators.MaxValueValidator(359), django.core.validators.MinValueValidator(0)], verbose_name='HUE MAX'),
        ),
        migrations.AlterField(
            model_name='colorhsvdetectionmodel',
            name='max_saturation',
            field=models.PositiveIntegerField(default=100, help_text='Maximum hue (0 - 100).', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='SATURATION MAX'),
        ),
        migrations.AlterField(
            model_name='colorhsvdetectionmodel',
            name='max_value',
            field=models.PositiveIntegerField(default=100, help_text='Maximum value (0 - 100).', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='VALUE MAX'),
        ),
        migrations.AlterField(
            model_name='colorhsvdetectionmodel',
            name='min_hue',
            field=models.PositiveIntegerField(default=80, help_text='Minimum hue (0 - 360).', validators=[django.core.validators.MaxValueValidator(359), django.core.validators.MinValueValidator(0)], verbose_name='HUE MIN'),
        ),
        migrations.AlterField(
            model_name='colorhsvdetectionmodel',
            name='min_saturation',
            field=models.PositiveIntegerField(default=20, help_text='Minimum saturation (0 - 100).', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='SATURATION MIN'),
        ),
        migrations.AlterField(
            model_name='colorhsvdetectionmodel',
            name='min_value',
            field=models.PositiveIntegerField(default=20, help_text='Minimum value (0 - 100).', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='VALUE MIN'),
        ),
        migrations.AlterField(
            model_name='colorrgbdetectionmodel',
            name='blue_max',
            field=models.PositiveIntegerField(default=171, help_text='Maximum blue value (0 - 255).', validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)], verbose_name='BLUE MAX'),
        ),
        migrations.AlterField(
            model_name='colorrgbdetectionmodel',
            name='blue_min',
            field=models.PositiveIntegerField(default=41, help_text='Minimum blue value (0 - 255).', validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)], verbose_name='BLUE MIN'),
        ),
        migrations.AlterField(
            model_name='colorrgbdetectionmodel',
            name='green_max',
            field=models.PositiveIntegerField(default=255, help_text='Maximum green value (0 - 255).', validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)], verbose_name='GREEN MAX'),
        ),
        migrations.AlterField(
            model_name='colorrgbdetectionmodel',
            name='green_min',
            field=models.PositiveIntegerField(default=51, help_text='Minimum green value (0 - 255).', validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)], verbose_name='GREEN MIN'),
        ),
        migrations.AlterField(
            model_name='colorrgbdetectionmodel',
            name='red_max',
            field=models.PositiveIntegerField(default=0, help_text='Maximum red value (0 - 255).', validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)], verbose_name='RED MAX'),
        ),
        migrations.AlterField(
            model_name='colorrgbdetectionmodel',
            name='red_min',
            field=models.PositiveIntegerField(default=48, help_text='Minimum red value (0 - 255).', validators=[django.core.validators.MaxValueValidator(255), django.core.validators.MinValueValidator(0)], verbose_name='RED MIN'),
        ),
        migrations.AlterField(
            model_name='eyesdetectionmodel',
            name='eye_max_size',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum possible object size.', null=True, verbose_name='EYE MAX SIZE'),
        ),
        migrations.AlterField(
            model_name='eyesdetectionmodel',
            name='eye_min_neighbors',
            field=models.PositiveIntegerField(default=5, help_text='Specifies how many neighbors each candidate rectangle should have to retain it.', verbose_name='EYE MIN NEIGHBORS'),
        ),
        migrations.AlterField(
            model_name='eyesdetectionmodel',
            name='eye_min_size',
            field=models.PositiveIntegerField(blank=True, help_text='Minimum possible object size.', null=True, verbose_name='EYE MIN SIZE'),
        ),
        migrations.AlterField(
            model_name='eyesdetectionmodel',
            name='eye_scale_factor',
            field=models.FloatField(default=1.3, help_text='Specifies how much the image size is reduced at each image scale.', verbose_name='EYE SCALE FACTOR'),
        ),
        migrations.AlterField(
            model_name='facedetectionmodel',
            name='face_max_size',
            field=models.PositiveIntegerField(blank=True, help_text='Maximum possible object size.', null=True, verbose_name='FACE MAX SIZE'),
        ),
        migrations.AlterField(
            model_name='facedetectionmodel',
            name='face_min_neighbors',
            field=models.PositiveIntegerField(default=6, help_text='Specifies how many neighbors each candidate rectangle should have to retain it.', verbose_name='FACE MIN NEIGHBORS'),
        ),
        migrations.AlterField(
            model_name='facedetectionmodel',
            name='face_min_size',
            field=models.PositiveIntegerField(blank=True, default=100, help_text='Minimum possible object size.', null=True, verbose_name='FACE MIN SIZE'),
        ),
        migrations.AlterField(
            model_name='facedetectionmodel',
            name='face_scale_factor',
            field=models.FloatField(default=1.05, help_text='Specifies how much the image size is reduced at each image scale.', verbose_name='FACE SCALE FACTOR'),
        ),
        migrations.AlterField(
            model_name='triangleandsquaredetectionmodel',
            name='approximation',
            field=models.FloatField(default=0.02, help_text='Approximation of detected shape.', verbose_name='APPROXIMATION'),
        ),
        migrations.AlterField(
            model_name='triangleandsquaredetectionmodel',
            name='kernel_shape',
            field=models.PositiveIntegerField(default=4, help_text='The number of columns and rows of ones in the numpy array.', verbose_name='KERNEL SHAPE'),
        ),
        migrations.AlterField(
            model_name='triangleandsquaredetectionmodel',
            name='max_area',
            field=models.FloatField(default=400, help_text='Maximum area of detected shape.', verbose_name='MAX AREA'),
        ),
    ]
